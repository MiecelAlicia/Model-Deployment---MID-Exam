# -*- coding: utf-8 -*-
"""2702327601_PY_ModelDeployment_MIDExam

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RVAlSYFgnfTlusdjVQgCe1zFvgRgd7lo
"""

import numpy as np
print(np.__version__)

import pandas as pd
import joblib
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import RobustScaler
from xgboost import XGBClassifier

class XGBoostLoanModel:
    def __init__(self, data_path):
        self.data_path = data_path
        self.model = None
        self.scaler = RobustScaler()

    def load_and_clean_data(self):
        df = pd.read_csv(self.data_path)
        df.dropna(inplace=True)

        df['person_gender'] = df['person_gender'].str.lower().str.strip()
        df['person_gender'] = df['person_gender'].replace({
            'fe male': 'female',
            'male': 'male',
            'female': 'female'
        })

        df = df[df['person_age'].between(18, 70)]
        df = df[df['person_emp_exp'] <= df['person_age']]

        education_order = {'High School':1, 'Associate':2, 'Bachelor':3, 'Master':4, 'Doctorate':5}
        df['person_education'] = df['person_education'].map(education_order)

        df['previous_loan_defaults_on_file'] = df['previous_loan_defaults_on_file'].map({'Yes':1, 'No':0})

        one_hot_cols = ['person_gender', 'person_home_ownership', 'loan_intent']
        df = pd.get_dummies(df, columns=one_hot_cols, drop_first=False)

        self.df = df

    def split_and_scale(self):
        X = self.df.drop(columns=['loan_status'])
        y = self.df['loan_status'].astype('int')

        X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.2, random_state=42)

        X_train_scaled = pd.DataFrame(
        self.scaler.fit_transform(X_train),
        columns=X_train.columns,
        index=X_train.index
        )
        X_test_scaled = pd.DataFrame(
        self.scaler.transform(X_test),
        columns=X_test.columns,
        index=X_test.index
        )

        self.X_train, self.X_test = X_train_scaled, X_test_scaled
        self.y_train, self.y_test = y_train, y_test

    def train_model(self):
        self.model = XGBClassifier(eval_metric="logloss", use_label_encoder=False, random_state=42)
        self.model.fit(self.X_train, self.y_train)

    def save_model(self, filename="xgb_loan_model.pkl"):
        joblib.dump({'model': self.model, 'scaler': self.scaler}, filename)

    def run(self):
        self.load_and_clean_data()
        self.split_and_scale()
        self.train_model()
        self.save_model()
        print("âœ… Model trained and saved as 'xgb_loan_model.pkl' using joblib")

if __name__ == "__main__":
    model = XGBoostLoanModel("Dataset_A_loan.csv")
    model.run()

from google.colab import files
files.download("xgb_loan_model.pkl")

